<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.39</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>自动操作</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>运行 Shell 脚本</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>import sys
import json
import urllib.request
import urllib.parse
import execjs

import tkinter.messagebox

tkinter.Tk().withdraw()


class Py4Js():

    def __init__(self):
        self.ctx = execjs.compile(""" 
        function TL(a) { 
        var k = ""; 
        var b = 406644; 
        var b1 = 3293161072; 
         
        var jd = "."; 
        var $b = "+-a^+6"; 
        var Zb = "+-3^+b+-f"; 
     
        for (var e = [], f = 0, g = 0; g &lt; a.length; g++) { 
            var m = a.charCodeAt(g); 
            128 &gt; m ? e[f++] = m : (2048 &gt; m ? e[f++] = m &gt;&gt; 6 | 192 : (55296 == (m &amp; 64512) &amp;&amp; g + 1 &lt; a.length &amp;&amp; 56320 == (a.charCodeAt(g + 1) &amp; 64512) ? (m = 65536 + ((m &amp; 1023) &lt;&lt; 10) + (a.charCodeAt(++g) &amp; 1023), 
            e[f++] = m &gt;&gt; 18 | 240, 
            e[f++] = m &gt;&gt; 12 &amp; 63 | 128) : e[f++] = m &gt;&gt; 12 | 224, 
            e[f++] = m &gt;&gt; 6 &amp; 63 | 128), 
            e[f++] = m &amp; 63 | 128) 
        } 
        a = b; 
        for (f = 0; f &lt; e.length; f++) a += e[f], 
        a = RL(a, $b); 
        a = RL(a, Zb); 
        a ^= b1 || 0; 
        0 &gt; a &amp;&amp; (a = (a &amp; 2147483647) + 2147483648); 
        a %= 1E6; 
        return a.toString() + jd + (a ^ b) 
    }; 
     
    function RL(a, b) { 
        var t = "a"; 
        var Yb = "+"; 
        for (var c = 0; c &lt; b.length - 2; c += 3) { 
            var d = b.charAt(c + 2), 
            d = d &gt;= t ? d.charCodeAt(0) - 87 : Number(d), 
            d = b.charAt(c + 1) == Yb ? a &gt;&gt;&gt; d: a &lt;&lt; d; 
            a = b.charAt(c) == Yb ? a + d &amp; 4294967295 : a ^ d 
        } 
        return a 
    } 
    """)

    def getTk(self, text):
        return self.ctx.call("TL", text)


def open_url(url):
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0'}
    req = urllib.request.Request(url=url, headers=headers)
    response = urllib.request.urlopen(req)
    data = response.read().decode('utf-8')
    return data


def buildUrl(content, tk, tl):
    baseUrl = 'http://translate.google.cn/translate_a/single'
    baseUrl += '?client=t&amp;'
    baseUrl += 'sl=auto&amp;'
    baseUrl += 'tl=' + str(tl) + '&amp;'
    baseUrl += 'hl=zh-CN&amp;'
    baseUrl += 'dt=at&amp;'
    baseUrl += 'dt=bd&amp;'
    baseUrl += 'dt=ex&amp;'
    baseUrl += 'dt=ld&amp;'
    baseUrl += 'dt=md&amp;'
    baseUrl += 'dt=qca&amp;'
    baseUrl += 'dt=rw&amp;'
    baseUrl += 'dt=rm&amp;'
    baseUrl += 'dt=ss&amp;'
    baseUrl += 'dt=t&amp;'
    baseUrl += 'ie=UTF-8&amp;'
    baseUrl += 'oe=UTF-8&amp;'
    baseUrl += 'clearbtn=1&amp;'
    baseUrl += 'otf=1&amp;'
    baseUrl += 'pc=1&amp;'
    baseUrl += 'srcrom=0&amp;'
    baseUrl += 'ssel=0&amp;'
    baseUrl += 'tsel=0&amp;'
    baseUrl += 'kc=2&amp;'
    baseUrl += 'tk=' + str(tk) + '&amp;'
    baseUrl += 'q=' + content
    return baseUrl


def translate(text, tk, tl, texts):
    # content是要翻译的内容
    content = urllib.parse.quote(text)
    url = buildUrl(content, tk, tl)

    result = open_url(url)
    res_json = json.loads(result)
    trans_text = res_json[0][0][0]
    # 去除读取文字中前后的换行符和逗号及单引号或双引号
    original = text.strip("\n").strip(",").strip("'").strip('"')
    translate = trans_text.strip(",").strip("'").strip('"')
    texts += translate + '\n'
    return texts


# 检验是否全是中文字符
def is_all_chinese(strs):
    for _char in strs:
        if not '\u4e00' &lt;= _char &lt;= '\u9fff':
            return False
    return True


def main(text):
    js = Py4Js()
    tk = js.getTk(text)
    texts = ""
    texts = translate(text, tk, 'en', texts) + "\n"
    texts = translate(text, tk, 'zh-cn', texts)
    return texts


for f in sys.argv[1:]:
    texts = main(f)
    tkinter.messagebox.showinfo(message=texts)
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>664EBFF0-67FE-4510-B16D-B2CC397D6158</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>脚本</string>
					<string>命令</string>
					<string>运行</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>E087FEDA-FB79-4DC4-9F2E-73D952F41C51</string>
				<key>UUID</key>
				<string>B6A572C4-A816-44B1-B132-42B3FCBE9A3D</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>408.500000:591.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
